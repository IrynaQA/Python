'''1. Напишите программу, которая получает длины двух катетов в
прямоугольном треугольнике и выводит его площадь. Каждое число
записано в отдельной строке'''


def triangle(cathetus_1, cathetus_2):
    S = (cathetus_1 * cathetus_2) / 2
    print('Square = ', S, '\n''cathetus first = ', cathetus_1, '\n''catethus second = ', cathetus_2)
    return S, cathetus_1, cathetus_2


triangle(25, 25)

'''2. В школе решили набрать три новых математических класса. Так как
занятия по математике у них проходят в одно и то же время, было
решено выделить кабинет для каждого класса и купить в них новые
парты. За каждой партой может сидеть не больше двух учеников.
Известно количество учащихся в каждом из трёх классов. Сколько
всего нужно закупить парт чтобы их хватило на всех учеников?
Программа получает на вход три натуральных числа: количество
учащихся в каждом из трех классов.'''
student1 = int(input("Enter number of students in first class: "))
student2 = int(input("Enter number of students in second class: "))
student3 = int(input("Enter number of students in third class: "))

if student1 % 2 != 0:
    desk1 = (student1 // 2) + 1
else:
    desk1 = (student1 // 2)

if student2 % 2 != 0:
    desk2 = (student2 // 2) + 1
else:
    desk2 = (student2 // 2)
if student3 % 2 != 0:
    desk3 = (student3 // 2) + 1
else:
    desk3 = (student3 // 2)

all_desks = (desk1 + desk2 + desk3)

print('First class = ', desk1, 'Second class = ', desk2, 'Third class = ', desk3, 'Together = ', all_desks)

'''3. Даны три целых числа. Определите, сколько среди них совпадающих.
Программа должна вывести одно из чисел: 3 (если все совпадают), 2
(если два совпадает) или 0 (если все числа различны).
'''
a = 1
b = 1
c = 1
if a == b and a == c:
    print('3')
elif a == b or b == c or a == c:
    print('2')
else:
    print('0')

'''4. Дано натуральное число. Требуется определить, является ли год с
данным номером високосным. Если год является високосным, то
выведите YES, иначе выведите NO. Напомним, что в соответствии с
григорианским календарем, год является високосным, если его номер
кратен 4, но не кратен 100, а также если он кратен 400.
'''
a = 2000
if a % 4 == 0 or a % 400 == 0 and a % 100 != 0:
    print('YES')
else:
    print("NO")

'''5. Дано положительное действительное число X. Выведите его первую
цифру после десятичной точки.'''
x = float(2.487)
print(int(x * 10) % 10)

'''6. Факториалом числа n называется произведение 1 × 2 × ... × n.
Обозначение: n!.
По данному натуральному n вычислите значение n!. Пользоваться
математической библиотекой math в этой задаче запрещено.'''
number = 6
count = 1
for i in range(1, number + 1):
    count = count * i
print(count)
'''7. Дано два числа a и b. Выведите гипотенузу треугольника с заданными
катетами.
'''
a = 10
b = 14
print((a ** 2 + b ** 2) ** 0.5)

'''8. Дано N чисел: сначала вводится число N, затем вводится ровно N целых
чисел. Подсчитайте количество нулей среди введенных чисел и
выведите это количество. Вам нужно подсчитать количество чисел,
равных нулю, а не количество цифр.
'''
count = 0
for i in range(int(input("Enter the number of tries: "))):
    if int(input("Enter number: ")) == 0:
        count += 1
print(count)
'''9. Дана строка, состоящая ровно из двух слов, разделенных пробелом.
Переставьте эти слова местами. Результат запишите в строку и
выведите получившуюся строку.
'''
line = 'python learn'
line = line[line.find(' '):] + ' ' + line[:line.find(' ')]
print(line)

'''10.Дана строка. Найдите в этой строке второе вхождение буквы f, и
выведите индекс этого вхождения. Если буква f в данной строке
встречается только один раз, выведите число -1, а если не встречается
ни разу, выведите число -2. '''
line_1 = 'Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming.'
letter = line_1[line_1.find('f')]
if letter not in line_1:
    print('-2')
count = 0
for i in line_1:
    if i == letter:
        count += 1

    if letter not in line_1:
        print('-2')

'''11.Дана строка, состоящая ровно из двух слов, разделенных пробелом.
Переставьте эти слова местами. Результат запишите в строку и
выведите получившуюся строку.
'''
line = 'python learn'
line = line[line.find(' '):] + ' ' + line[:line.find(' ')]
print(line)

'''12.Программа получает на вход последовательность целых
неотрицательных чисел, каждое число записано в отдельной строке.
Последовательность завершается числом 0, при считывании которого
программа должна закончить свою работу и вывести количество
членов последовательности (не считая завершающего числа 0). Числа,
следующие за числом 0, считывать не нужно'''
list_for_input = []
while True:
    numbers = int(input("Enter number: "))
    list_for_input.append(numbers)
    if numbers == 0:
        print(len(list_for_input) - 1)
        break

'''13.Последовательность состоит из натуральных чисел и завершается
числом 0. Определите, сколько элементов этой последовательности
больше предыдущего элемента'''
list = [1, 8, 11, 45, 20, 36, 47, 82, 4, 0, 25, 5, 4, 1, 7, 71, 36, 56, 37, 38, 89, 1, 0]
count = 0
for i in range(len(list) - 1):
    if list[i] < list[i + 1]:
        count += 1
print(count)

'''14.Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т.
д.). Если элементов нечетное число, то последний элемент остается на
своем месте'''
my_list = [1, 8, 11, 45, 20, 36, 47, 82, 4, 5, 47, 54, 74, 16, 68, 5, 11, 43, 77]
if len(my_list) % 2 == 0:
    for i in range(len(my_list) - 1):
        if len(my_list) % 2 == 0:
            my_list[i], my_list[i + 1] = my_list[i + 1], my_list[i]
if len(my_list) % 2 != 0:
    for j in range(len(my_list) - 2):
        my_list[j], my_list[j + 1] = my_list[j + 1], my_list[j]
print(len(my_list))
print(my_list)

'''15.Дан список, упорядоченный по неубыванию элементов в нем.
Определите, сколько в нем различных элементов.
'''
count = 1
list_3 = [20, 30, 30, 30, 35, 35, 40, 50, 60, 60, 70, 80, 90]
for i in range(len(list_3) - 1):
    if list_3[i] < list_3[i + 1]:
        count += 1

print(count)